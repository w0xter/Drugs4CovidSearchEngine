{"version":3,"sources":["assets/medical_research.svg","assets/abduction.svg","components/Header.js","components/Layout.js","components/Searchbar.js","components/MedicineCarousel.js","components/AtcInfo.js","components/DrugTabs.js","pages/Home.js","api/searchs.js","api/requests.js","pages/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","style","paddingTop","paddingBottom","Item","float","to","Layout","justify","xs","span","sm","md","lg","xl","children","Text","Typography","Search","Input","SearchBar","useState","type","setType","urlVal","document","location","href","split","length","defaultValue","includes","marginBottom","placeholder","enterButton","size","onSearch","value","goTo","marginTop","gutter","align","level","Group","onChange","e","target","Button","disabled","TabPane","Tabs","Title","MedicineCarousel","medicines","docTypes","imgTypes","capitalize","s","toLocaleLowerCase","charAt","toUpperCase","slice","background","padding","map","medicine","aut","Object","keys","estado","Date","susp","rev","viasAdministracion","ppa","vtm","nombre","medicineDosis","dosis","tabName","substring","via","tab","key","nregistro","psum","color","cpresc","receta","triangulo","CaretDownOutlined","comerc","header","strong","formaFarmaceutica","idx","materialesInf","docs","direction","doc","url","tipo","fotos","img","src","alt","className","AtcInfo","data","name","tradeMedicines","activeIngredients","overflow","itemLayout","Meta","title","replace","description","articles","dataSource","renderItem","item","diseases","disease","DrugTabs","drugs","console","log","drug","Paragraph","Home","state","this","setState","parentCallback","setDrugs","MedicalResearch","React","Component","getATCInfo","atc","Promise","resolve","reject","result","axios","get","then","response","catch","err","getRelatedDiseases","getRelatedDrugs","getMedicinesInfo","resultados","getSpanishMedicineATC","results","getSpanishTradeNameMedicineInfo","atcs","codigo","push","searchByActiveIngredient","text","post","atc_code","all","SearchPage","antIcon","LoadingOutlined","fontSize","spin","match","params","drugsNames","searchType","setResult","searching","setSearching","error","setError","sendData","message","success","content","duration","warning","useEffect","indicator","status","subTitle","abduction","App","exact","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe4d0ae9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/medical_research.c8aab4c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/abduction.403de342.svg\";","import React from 'react'\nimport {Menu} from 'antd'\nimport {Link} from 'react-router-dom'\nexport default function Header(props){\n    return(\n        <Menu style={{paddingTop: 16, paddingBottom:16}}>\n            <Menu.Item style={{float:'left'}}>\n                <Link to=\"/\">BIO-NLP</Link>\n            </Menu.Item>\n        </Menu>\n    )\n}","import React from 'react'\nimport Header from './Header'\nimport {Row, Col} from 'antd'\nexport default function Layout(props){\n    return(\n        <Row justify=\"center\">\n            <Col\n            xs={{ span: 22 }}\n            sm={20}\n            md={{ span: 18}}\n            lg={{ span: 16}}\n            xl={{ span: 16}}            \n            >\n                <Header></Header>\n                {props.children}\n            </Col>\n        </Row>\n    )\n}","import React, {useState} from 'react'\nimport {Input,Row, Col,Space, Radio, Typography} from 'antd'\nconst {Text} = Typography\nconst { Search } = Input;\nexport default function SearchBar(props){\n    const [type, setType] = useState('activeingredient')\n    const searchTypes = ['generic', 'atc', 'activeingredient', 'spanish']\n    const urlVal = document.location.href.split(\"/\")[document.location.href.split(\"/\").length-2]\n    const defaultValue = (searchTypes.includes(urlVal))? urlVal:'activeingredient'\n    const goTo = (value) => {\n        document.location.href=`/search/${type}/${value}`\n    }\n    const onChange = (e) => {\n        setType(e.target.value)\n    }\n        return(    \n            <div style={{marginBottom:16}}>\n                    <Search\n                        placeholder=\"input search text\"\n                        enterButton=\"Search\"\n                        size=\"large\"\n                        onSearch={value => goTo(value)}\n                    />\n                    <Row style={{marginTop:10}} gutter={[16, 16]} align=\"middle\">\n                        <Col>\n                        <Text level={4} type=\"secondary\">Search by: </Text>\n                        </Col>\n                        <Col>\n                        <Radio.Group onChange={onChange} defaultValue={defaultValue} size=\"small\">\n                            <Radio.Button value=\"activeingredient\">Active ingredient</Radio.Button>\n                            <Radio.Button value=\"atc\">ATC code</Radio.Button>\n                            <Radio.Button disabled value=\"spanish\">Spanish Trade name 🇪🇸</Radio.Button>\n                        </Radio.Group>\n                        </Col>\n                    </Row>\n            </div>\n    \n          )\n}","import React from 'react'\nimport {Tabs, Tag, Row, Col, Space, Typography, Descriptions, List, Divider} from 'antd'\nimport {CaretDownOutlined} from '@ant-design/icons'\nconst {TabPane} = Tabs \nconst {Title} = Typography\nconst {Text} = Typography\n/**\n * \n * {\n  \"nregistro\": \"81012\",\n  \"nombre\": \"ABACAVIR/LAMIVUDINA DR. REDDYS 600 MG/300 MG COMPRIMIDOS RECUBIERTOS CON PELICULA EFG\",\n  \"labtitular\": \"Reddy Pharma Iberia S.A.\",\n  \"cpresc\": \"Uso Hospitalario\",\n  \"estado\": {\n    \"aut\": 1466978400000\n  },\n  \"comerc\": true,\n  \"receta\": true,\n  \"generico\": true,\n  \"conduc\": false,\n  \"triangulo\": false,\n  \"huerfano\": false,\n  \"biosimilar\": false,\n  \"nosustituible\": {\n    \"id\": 0,\n    \"nombre\": \"N/A\"\n  },\n  \"psum\": false,\n  \"notas\": false,\n  \"materialesInf\": true,\n  \"ema\": false,\n  \"docs\": [\n    {\n      \"tipo\": 1,\n      \"url\": \"https://cima.aemps.es/cima/pdfs/ft/81012/FT_81012.pdf\",\n      \"urlHtml\": \"https://cima.aemps.es/cima/dochtml/ft/81012/FT_81012.html\",\n      \"secc\": true,\n      \"fecha\": 1552696434000\n    },\n    {\n      \"tipo\": 2,\n      \"url\": \"https://cima.aemps.es/cima/pdfs/p/81012/P_81012.pdf\",\n      \"urlHtml\": \"https://cima.aemps.es/cima/dochtml/p/81012/P_81012.html\",\n      \"secc\": true,\n      \"fecha\": 1540245746000\n    }\n  ],\n  \"fotos\": [\n    {\n      \"tipo\": \"materialas\",\n      \"url\": \"https://cima.aemps.es/cima/fotos/thumbnails/materialas/81012/81012_materialas.jpg\",\n      \"fecha\": 1570105172000\n    },\n    {\n      \"tipo\": \"formafarmac\",\n      \"url\": \"https://cima.aemps.es/cima/fotos/thumbnails/formafarmac/81012/81012_formafarmac.jpg\",\n      \"fecha\": 1570105174000\n    }\n  ],\n  \"viasAdministracion\": [\n    {\n      \"id\": 48,\n      \"nombre\": \"VÍA ORAL\"\n    }\n  ],\n  \"formaFarmaceutica\": {\n    \"id\": 42,\n    \"nombre\": \"COMPRIMIDO RECUBIERTO CON PELÍCULA\"\n  },\n  \"formaFarmaceuticaSimplificada\": {\n    \"id\": 10,\n    \"nombre\": \"COMPRIMIDO\"\n  },\n  \"vtm\": {\n    \"id\": 413381000,\n    \"nombre\": \"abacavir + lamivudina\"\n  },\n  \"dosis\": \"600 mg/300 mg\"\n}\n */\nexport default function MedicineCarousel({medicines}){\n    const docTypes = ['Ficha Técnica','Prospecto', 'Informe Público Evaluación','Plan de gestión de riesgos']\n    const imgTypes = {'formafarmac':'Forma farmacéutica', 'materialas':'Material de acondicionamiento secundario'}\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        s = s.toLocaleLowerCase()\n        return s.charAt(0).toUpperCase() + s.slice(1)\n      }    \n    return(\n        <div style={{background:'#fbfbfb', padding:16}}>\n            <Title level={3}>You can find it as:</Title>\n        <Tabs size=\"small\">\n            {\n                medicines.map((medicine) => {\n                    let aut = Object.keys(medicine.estado).includes('aut')? Date(medicine.estado.aut):0\n                    let susp = Object.keys(medicine.estado).includes('susp')? Date(medicine.estado.susp):0\n                    let rev = Object.keys(medicine.estado).includes('rev')? Date(medicine.estado.rev):0\n                    let estado = aut !== 0 && (susp === 0 || aut > susp) && (rev === 0 || aut > rev )\n                    let viasAdministracion = ''\n                    let ppa = medicine.vtm.nombre.split(\" + \")\n                    let medicineDosis = medicine.dosis.split(\"/\").length >= ppa.length ? medicine.dosis.split(\"/\"):medicine.dosis.split(\"-\")\n                    let tabName = medicine.nombre.substring(0,25)\n                    tabName = medicine.nombre.length > 25 ? tabName + '...':tabName\n                    medicine.viasAdministracion.map((via) => viasAdministracion += via.nombre + ', ')\n                    return(\n                        <TabPane tab={tabName} key={medicine.nregistro}>\n                            <Title level={4}>{medicine.nombre}</Title>\n                            <Row gutter={[8,8]}>\n                                {medicine.psum? (\n                                    <Col>\n                                    <Tag color=\"error\">Problemas De Suministro</Tag>\n                                    </Col>\n                                ):''}\n                                <Col>\n                                    <Tag color=\"blue\">{medicine.cpresc}</Tag>                                \n                                </Col>\n                                <Col>\n                                    <Tag color=\"warning\">{medicine.receta ? 'Con Receta':'Sin Receta'}</Tag>                                \n                                </Col>\n                                {medicine.triangulo ? (<Col>\n                                    <Tag color=\"warning\">Triángulo Negro <CaretDownOutlined style={{color:'#000'}} /></Tag>\n                                </Col>):''}\n                                <Col>\n                                {estado ?(\n                                    <Tag color=\"success\">Autorizado</Tag>\n                                ):(\n                                    <Tag color=\"error\">Suspendido</Tag>\n                                )}\n                                </Col>\n                                { medicine.comerc?(\n                                    <Col>\n                                        <Tag color=\"success\">Comercial</Tag>\n                                    </Col>):''\n                                }\n                            </Row>\n                            <div>\n                            <List header={<Title level={3}>Información General</Title>}>\n                                <List.Item><Text strong>Forma Farmacéutica: </Text> {capitalize(medicine.formaFarmaceutica.nombre)}</List.Item>\n                                <List.Item ><Text strong>Via de Administración: </Text>{capitalize(viasAdministracion)}</List.Item>\n                                <List.Item><Text strong>Principio Activo: </Text> {medicine.vtm.nombre}</List.Item>\n                                <List.Item><Text strong>Dosis:</Text></List.Item>\n                                {medicineDosis.map((dosis, idx) =>(\n                                    <>\n                                {ppa.length > idx ? (<List.Item><Text strong>{capitalize(ppa[idx]) + ': '}</Text>{ dosis}</List.Item>):''}\n                                </>\n                                ))\n                                }\n                            </List>\n                            </div>\n                            {medicine.materialesInf === true ?(\n                                <>\n                                {medicine.docs.length !== 0 ? (\n                                <>\n                                    <Title level={4}>Documentos Asociados</Title>\n                                    <Space size=\"small\" direction=\"vertical\">\n                                        {medicine.docs.map((doc) => (\n                                            <a href={doc.url}>{docTypes[doc.tipo]}</a>\n                                        ))}\n                                    </Space>\n                                </>\n                                ):''}\n                                {medicine.fotos.length !== 0 ? (\n                                    <>\n                                    <Title level={4}>Imagenes Asociadas</Title>\n                                    <Row align=\"bottom\" gutter={[16,16]}>\n                                    {medicine.fotos.map((img) => (\n                                        <Col xs={24} md={8} justify=\"center\">\n                                            <Row justify=\"center\">\n                                            <img src={img.url} alt=\"\" className=\" medicineImg responsiveImg\"/>\n                                            </Row>\n                                            <Row justify=\"center\">\n                                                <Text type=\"secondary\">{imgTypes[img.tipo]}</Text>\n                                            </Row>\n                                        </Col>\n                                    ))}\n                                    </Row>\n                                    </>\n                                ):''}\n\n                                </>\n                            ):''}\n                        </TabPane>\n                    )\n                })\n            }\n        </Tabs>    \n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {List,Typography, Tag, Row, Col, Space, Divider} from 'antd'\nimport MedicineCarousel from './MedicineCarousel'\nconst {Title} = Typography\n\nexport default function AtcInfo(props){\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        s = s.toLocaleLowerCase()\n        return s.charAt(0).toUpperCase() + s.slice(1)\n      }\n    return(\n        <>\n            {/* <Row gutter={[16,16]}>\n                <Col>\n                <Tag color=\"blue\">ATC: {props.data.atc_code}</Tag>\n                </Col>\n                <Col>\n                    <Tag color=\"geekblue\">Parent ATC: {props.data.atc_parent}</Tag>\n                </Col>\n                <Col>\n                        <Tag color=\"green\">CUI: {props.data.cui}</Tag>\n                </Col>\n                <Col>\n                        <Tag color=\"volcano\">LEVEL: {props.data.level}</Tag>                        \n                </Col>\n            </Row>                         */}\n            <Title level={2}>\n                {capitalize(props.data.name)}\n            </Title>\n            <Divider></Divider>\n            { props.data.tradeMedicines.length !== 0 ?(\n            <div>\n                <MedicineCarousel medicines={props.data.tradeMedicines}></MedicineCarousel>\n                <Divider></Divider>\n            </div>\n            ):''\n            }\n            {Object.keys(props.data.activeIngredients).length !== 0 ? (\n                <div style={{  overflow:'auto'}}>\n                    <List\n                        header={<Title level={3}>Related Active Ingredients:</Title>}\n                        itemLayout=\"horizontal\"\n\n                    >\n                        {Object.keys(props.data.activeIngredients).map((key) => {\n                            const value = props.data.activeIngredients[key]\n                          return  (\n                        <List.Item>\n                            <List.Item.Meta\n                            title={<a href={\"/search/activeingredient/\" + value.replace(' ', '')}>{capitalize(value)}</a>}\n                            description={<a href={'/search/atc/' + key.replace(/ /g, '')}><Tag color=\"blue\">{key}</Tag></a>}\n                            />\n                        </List.Item>\n                        )})}\n \n                    </List>\n                    <Divider></Divider>\n                </div>\n            ):''}\n            {Object.keys(props.data.articles).length !== 0 ? (\n                <div style={{  overflow:'auto'}}>\n                    <List\n                        header={<Title level={3}>Related Articles:</Title>}\n                        itemLayout=\"horizontal\"\n                        dataSource={props.data.articles}\n                        renderItem={item => (\n                        <List.Item>\n                            <List.Item.Meta\n                            title={ <a href={item.url}>{item.name}</a>}\n                            />\n                        </List.Item>\n                        )}\n                    />\n                    <Divider></Divider>\n                </div>\n            ):''}                                       \n            <div style={{  overflow:'auto'}}>\n                <Title level={3}>Related Diseases:</Title>\n                <Space direction=\"vertical\" size=\"small\">\n                    <Row gutter={[8,8]} justify=\"left\" align=\"middle\">\n                    { Object.keys(props.data.diseases).map((disease) => {\n                        return(\n                        <Col>\n                            <Tag color=\"red\">{disease}</Tag>\n                        </Col>\n                        )\n                    })}\n                    </Row>\n                </Space>\n            </div>\n            <Divider></Divider>        \n        </>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Tabs,Typography, Tag, Row, Col, Space, Divider} from 'antd'\nimport AtcInfo from './AtcInfo'\nconst { TabPane } = Tabs;\n/*\n\natc_code: \"N02BE01\"\n​​\natc_parent: \"N02BE\"\n​​\ncui: \"C0000970\"\n​​\nlevel: 5\n​​\nname: \"paracetamol\"\n*/\nexport default function DrugTabs({drugs}){\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        s = s.toLocaleLowerCase()\n        return s.charAt(0).toUpperCase() + s.slice(1)\n      }\n    console.log(drugs)    \n    return(\n        <>\n        {drugs.length !== 0 ?(\n        <Tabs>\n            {drugs.map((drug) => {\n                return(\n                    <TabPane tab={capitalize(drug.name)} key={drug.name}>\n                        <AtcInfo data={drug}/>\n                    </TabPane>\n                )\n            })}\n        </Tabs>\n        ):''}\n        </>\n    )\n}","import React from 'react'\nimport Layout from '../components/Layout'\nimport SearchBar from '../components/Searchbar'\nimport DrugTabs from '../components/DrugTabs'\nimport { Row, Col, Typography} from 'antd';\nimport MedicalResearch from '../assets/medical_research.svg'\n\nconst {Title} = Typography\nconst {Paragraph} = Typography\nexport default class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            drugs:[]\n        }\n    }\n    setDrugs(drugs){\n        this.setState({drugs:drugs})\n    }\n    render(){\n        return(\n            <Layout>\n                <SearchBar parentCallback={(drugs) => this.setDrugs(drugs)}></SearchBar>\n                {this.state.drugs.length !== 0 ? (<DrugTabs drugs={this.state.drugs}></DrugTabs>):(\n                    <div>\n                    <Row align=\"top\">\n                        <Col xs={24} md={12}>\n                            <Title level={2}>\n                            BIO-NLP\n                            </Title>\n                            <Paragraph>\n                            An open web service to identify drugs mentioned in a text and classify them according to the Anatomical Therapeutic Chemical (ATC) classification system and the Concept Unique Identifiers (CUI) described in the Unified Medical Language System (UMLS)\n                            </Paragraph>\n                        </Col>\n                        <Col xs={24} md={12}>\n                            <img className=\"responsiveImg\" src={MedicalResearch}/>\n                        </Col>                         \n                    </Row>\n                    <Row>\n                       \n                    </Row>\n                    </div>\n                )}\n            </Layout>\n        )\n    }\n}","import {getSpanishTradeNameMedicineInfo,findSpanishTradeNameMedicine,findDrugs, getMedicinesInfo, getRelatedArticles, getRelatedDiseases, getRelatedDrugs} from './requests'\n\nexport function getATCInfo(atc){\n    console.log(atc)\n    return new Promise((resolve, reject) => {\n    let result  = {name:atc,articles:[], tradeMedicines:[], diseases:[], activeIngredients:[]};\n    getRelatedArticles(atc).then((data) => {\n        result.articles = data\n        return getRelatedDiseases(atc)\n    }).then((data) => {\n        result.diseases = data\n        return getRelatedDrugs(atc)\n    }).then((data) => {\n        result.activeIngredients = data;\n        return getMedicinesInfo(atc)\n    }).then((data) => {\n        result.tradeMedicines = data.resultados;\n        return Promise.resolve(result)\n    }).then((data) => {\n        resolve(data)\n    }).catch((err) => {console.log(\"Falla GET ATC\");reject(err)})\n})\n}\nexport function searchByAtc(atc){\n    return new Promise((resolve, reject) => {\n        getATCInfo(atc)\n        .then(data => {\n            if(data.articles.length === 0 &&\n                data.tradeMedicines.length === 0 &&\n                Object.keys(data.diseases).length === 0 &&\n                Object.keys(data.activeIngredients).length === 0\n            ){\n                resolve([])\n            }else{\n                resolve([data])\n\n            }\n\n        })\n        .catch(err => reject(err))\n    })\n}\nexport function getSpanishMedicineATC(name){\n    return new Promise((resolve, reject) => {\n        let results = []\n    findSpanishTradeNameMedicine(name)\n        .then((data) => {\n            data.resultados.map(medicine => {\n                getSpanishTradeNameMedicineInfo(medicine.nregistro).then((data) => {\n                    data.atcs.map((atc) => {\n                        if(!results.includes(atc.codigo))\n                            results.push(atc.codigo)\n                    })\n                }).catch((err) => console.log(err))\n            });\n            return results\n        }).then(data => {resolve(results)})\n        .catch(err => reject(err))\n    });\n}\nexport function searchByActiveIngredient(text){\n    return new Promise((resolve, reject) => {\n        let results = []\n        findDrugs(text).then((data) => {\n            data.map((drug, idx) =>{\n                results.push(getATCInfo(drug.atc_code))\n            });\n            return Promise.all(results)\n        }).then(data => resolve(data))\n        .catch(err => {\n            console.log('Falla FindDrugs!')\n            reject(err)\n        })\n    });\n}\nexport function searchBySpanishTradeName(text){\n    return new Promise((resolve, reject) => {\n        let results = []\n        getSpanishMedicineATC(text)\n        .then((data) => {\n            console.log(data)\n            data.map((atc) => {\n                console.log(\"HOLA\")\n                results.push(getATCInfo(atc))\n            })\n            return Promise.all(results)\n        }).then(data => {console.log(data);resolve(data)})\n        .catch(err => reject(err))\n    });\n}\n","import axios from 'axios'\nconst API = 'https://librairy.linkeddata.es/bio-nlp'\nexport function findDrugs(data){\n    return new Promise((resolve, reject) => {\n        const options = {\n            header:{\n                'Content-Type': 'application/json'\n            }\n        }\n        axios.post(`${API}/drugs`, {text:data}, options).then((response) => {\n            resolve(response.data)\n        }).catch(err => reject(err));\n    });\n}\nexport function getRelatedDrugs(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/drugs?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n\n    })\n} \nexport function getRelatedDiseases(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/diseases?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    })\n}\nexport function getRelatedArticles(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/articles?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    })\n}\nexport function getMedicinesInfo(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://cima.aemps.es/cima/rest/medicamentos?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    });\n}\nexport function findSpanishTradeNameMedicine(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://cima.aemps.es/cima/rest/medicamentos?nombre=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    });\n}\nexport function getSpanishTradeNameMedicineInfo(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://cima.aemps.es/cima/rest/medicamento?nregistro=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))    })\n}","import React, {useEffect, useState} from 'react'\nimport {message,Spin, Result, Row, Col, Typography, Space} from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport SearchBar from '../components/Searchbar'\nimport DrugTabs from '../components/DrugTabs'\nimport Layout from '../components/Layout'\nimport abduction from '../assets/abduction.svg'\nimport {searchByActiveIngredient, searchBySpanishTradeName, searchByAtc} from '../api/searchs'\nconst {Title} = Typography\nexport default function SearchPage(props){\n    const antIcon = <LoadingOutlined style={{ fontSize: 72 }} spin />;\n    const value = props.match.params.drugsNames\n    const searchType = props.match.params.searchType\n    const [result, setResult] = useState([])\n    const [searching, setSearching] = useState(true)\n    const [error, setError] = useState(false)\n\n    const sendData = (value) => {\n        let key = 'updatable'\n        if(value.length !== 0){\n            Promise.resolve(searchType)\n            .then((type) => {\n                if(type === 'activeingredient'){\n                    return searchByActiveIngredient(value)\n                }else if (type === 'spanish'){\n                    return searchBySpanishTradeName(value)\n                }else if (type === 'atc'){\n                    return searchByAtc(value)\n                }else{\n                    setSearching(false)\n                    setError(true)\n                    message.error('This field is not valid')\n                    return Promise.reject('Invalid search field')\n                }\n            }).then((data) => {\n                console.log(\"Resultado!\")\n                console.log(data)\n                if(data.length !== 0){\n                    message.success({ content: 'Loaded!', key, duration: 0.5 });\n                    setResult(data)\n                    setSearching(false)\n                }else{\n                        message.warning({content:\"Sorry we didn't find anything...\", key, duration:2})\n                        setSearching(false)\n                }\n            }).catch((err) => {\n                console.log(err)\n                message.error(\"Oops, somenthing goes wrong please try it again...\")\n                setSearching(false)\n                setError(true)\n            })\n        }else{\n            message.error({content:\"The search field is empty!\", key, duration:2})\n        }\n    }\n\n    useEffect(() => {\n        sendData(value)\n    },[value])\n        return(\n            <Layout>\n            <SearchBar></SearchBar>\n            {result.length !== 0 ? <DrugTabs drugs={result}></DrugTabs>:searching ? (\n                <Row align=\"middle\" justify=\"center\" style={{marginTop:20}}>\n                    <Col justify=\"center\">\n                        <Spin indicator={antIcon} />                    \n                    </Col>\n                </Row>\n            ):error ? (\n                <Result\n                status=\"500\"\n                title=\"500\"\n                subTitle=\"Oh no! Our spaghetti code is not working properly. We will be back soon!\" />               \n            ):(\n                <Row justify=\"center\" align=\"middle\">\n                    <Col span={14}justify=\"center\" align=\"middle\">\n                        <Space direction=\"vertical\" size=\"large\">\n                        <Title level={3}>Wow, some alien abducted the {value} from our drug repository</Title>\n                        <img src={abduction} className=\"responsiveImg\" alt=\"\"/>\n                        <Title type=\"secondary\" level={4}>Just kidding, we haven't found anything related with this drug</Title>\n                        </Space>\n                    </Col>\n                    </Row>\n            )\n        }\n            </Layout>\n        )\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from './pages/Home'\nimport SearchPage from './pages/SearchPage'\nimport './App.css';\nimport 'antd/dist/antd.css';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n        <Route path=\"/search/:searchType/:drugsNames\" component={SearchPage}/>\n      </Switch>\n    </Router>\n  );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}