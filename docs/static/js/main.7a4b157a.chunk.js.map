{"version":3,"sources":["assets/medical_research.svg","components/Header.js","components/Layout.js","components/Searchbar.js","api/requests.js","components/MedicineCarousel.js","components/DrugTabs.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","style","paddingTop","paddingBottom","Item","float","to","Layout","justify","xs","span","sm","md","lg","xl","children","Search","Input","SearchBar","state","find","lastSearch","value","key","message","loading","content","length","this","searh","then","data","localStorage","setItem","parentCallback","success","duration","warning","catch","err","error","Promise","resolve","reject","axios","post","header","response","findDrugs","text","result","promiseChainRelatedDrugs","promiseChainRelatedDiseases","promiseChainRelatedArticles","promiseChainMedicineInfo","map","drug","idx","relatedDrugs","relatedDiseases","relatedArticles","medicinesInfo","push","get","getRelatedArticles","atc_code","getRelatedDrugs","getRelatedDiseases","getMedicinesInfo","all","drugs","console","log","Object","keys","includes","articles","medicines","resultados","diseases","marginBottom","placeholder","enterButton","size","onSearch","sendData","setState","getItem","Component","TabPane","Tabs","Title","Typography","Text","MedicineCarousel","docTypes","imgTypes","capitalize","s","toLocaleLowerCase","charAt","toUpperCase","slice","background","padding","level","medicine","aut","estado","Date","susp","rev","viasAdministracion","ppa","vtm","nombre","split","medicineDosis","dosis","tabName","substring","via","tab","nregistro","gutter","psum","color","cpresc","receta","triangulo","CaretDownOutlined","comerc","strong","formaFarmaceutica","materialesInf","docs","direction","doc","href","url","tipo","fotos","align","img","src","alt","className","type","Paragraph","DrugTabs","name","atc_parent","cui","overflow","article","target","disease","Home","setDrugs","MedicalResearch","React","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7a4b157a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/medical_research.c8aab4c4.svg\";","import React from 'react'\nimport {Menu} from 'antd'\nimport {Link} from 'react-router-dom'\nexport default function Header(props){\n    return(\n        <Menu style={{paddingTop: 16, paddingBottom:16}}>\n            <Menu.Item style={{float:'left'}}>\n                <Link to=\"/\">BIO-NLP</Link>\n            </Menu.Item>\n        </Menu>\n    )\n}","import React from 'react'\nimport Header from './Header'\nimport {Row, Col} from 'antd'\nexport default function Layout(props){\n    return(\n        <Row justify=\"center\">\n            <Col\n            xs={{ span: 22 }}\n            sm={20}\n            md={{ span: 18}}\n            lg={{ span: 16}}\n            xl={{ span: 16}}            \n            >\n                <Header></Header>\n                {props.children}\n            </Col>\n        </Row>\n    )\n}","import React, {useState, Component} from 'react'\nimport {Input, message} from 'antd'\nimport {findDrugs, getRelatedDrugs, getRelatedDiseases, getRelatedArticles, getMedicinesInfo} from '../api/requests'\nconst { Search } = Input;\nexport default class SearchBar extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            find:'', \n            lastSearch:''\n        }\n    }\n    sendData(value){\n        let key = 'updatable'\n        message.loading({ content: 'Loading...', key });\n        if(value.length !== 0){\n            this.searh(value).then((data) => {\n                if(data.length !== 0){\n                    localStorage.setItem('lastSearch', value)\n                    this.props.parentCallback(data)\n                    message.success({ content: 'Loaded!', key, duration: 0.5 });\n                }else{\n                    localStorage.setItem('lastSearch', '')\n                    message.warning({content:\"Sorry we didn't find anything...\", key, duration:2})\n                }\n            }).catch(err => {\n                localStorage.setItem('lastSearch', '')\n                message.error(\"Oops, somenthing goes wrong please try it again...\")\n            })\n        }else{\n            localStorage.setItem('lastSearch', '')\n            message.error({content:\"The search field is empty!\", key, duration:2})\n        }\n    }\n    searh(data){\n        return new Promise((resolve, reject) => {\n            findDrugs({text:data}).then((response) => {\n                let result = response\n                let promiseChainRelatedDrugs = []\n                let promiseChainRelatedDiseases = []\n                let promiseChainRelatedArticles = []\n                let promiseChainMedicineInfo = [] \n                response.map((drug, idx) => {\n                    result[idx].relatedDrugs = []\n                    result[idx].relatedDiseases = []\n                    result[idx].relatedArticles = []\n                    result[idx].medicinesInfo = []\n                    promiseChainRelatedArticles.push(getRelatedArticles(drug.atc_code))\n                    promiseChainRelatedDrugs.push(getRelatedDrugs(drug.atc_code))\n                    promiseChainRelatedDiseases.push(getRelatedDiseases(drug.atc_code))\n                    promiseChainMedicineInfo.push(getMedicinesInfo(drug.atc_code))\n                })\n                Promise.all(promiseChainRelatedDrugs).then((data) =>{\n                    data.map((drugs, idx) => {\n                        console.log(\"Llego 1\")\n                    if (Object.keys(drugs).includes(result[idx].atc_code)) \n                        delete drugs[result[idx].atc_code]\n                    result[idx].relatedDrugs=drugs\n                    })\n                    return Promise.all(promiseChainRelatedArticles)\n                }).then((data) => {\n                    console.log(\"Llego 2\")\n                    data.map((articles, idx) => {\n                        result[idx].relatedArticles=articles\n                    })\n                    return Promise.all(promiseChainMedicineInfo)\n                }).then((data) => {\n                    console.log(\"Llego 3\")\n                    data.map((medicines, idx) => {\n                        result[idx].medicinesInfo = medicines.resultados\n                    })\n                    return Promise.all(promiseChainRelatedDiseases)\n                })\n                .then((data) => {\n                    console.log(\"Llego 4\")\n                    Promise.resolve(data.map((diseases, idx) => {\n                        result[idx].relatedDiseases=diseases\n                    })).then(() => resolve(result))                    \n                })\n                .catch((err) => reject(err))\n    \n            }).catch((err) => reject(err))\n        })\n    }\n    render(){\n        return(    \n            <div style={{marginBottom:16}}>\n            <Search\n                placeholder=\"input search text\"\n                enterButton=\"Search\"\n                size=\"large\"\n                onSearch={value => this.sendData(value)}\n            />\n            </div>\n    \n          )\n    }\n    componentDidMount() {\n        Promise.resolve(this.setState({lastSearch:localStorage.getItem('lastSearch')})).then(() => {\n            if(this.state.lastSearch !== null && this.state.lastSearch.length !== 0){\n                this.sendData(this.state.lastSearch)\n            }\n        })\n    }    \n}","import axios from 'axios'\nconst API = 'https://librairy.linkeddata.es/bio-nlp'\nexport function findDrugs(data){\n    return new Promise((resolve, reject) => {\n        const options = {\n            header:{\n                'Content-Type': 'application/json'\n            }\n        }\n        axios.post(`${API}/drugs`, data, options).then((response) => {\n            resolve(response.data)\n        }).catch(err => reject(err));\n    });\n}\nexport function getRelatedDrugs(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/drugs?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n\n    })\n} \nexport function getRelatedDiseases(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/diseases?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    })\n}\nexport function getRelatedArticles(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/articles?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    })\n}\nexport function getMedicinesInfo(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://cima.aemps.es/cima/rest/medicamentos?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    });\n}","import React from 'react'\nimport {Tabs, Tag, Row, Col, Space, Typography, Descriptions, List, Divider} from 'antd'\nimport {CaretDownOutlined} from '@ant-design/icons'\nconst {TabPane} = Tabs \nconst {Title} = Typography\nconst {Text} = Typography\n/**\n * \n * {\n  \"nregistro\": \"81012\",\n  \"nombre\": \"ABACAVIR/LAMIVUDINA DR. REDDYS 600 MG/300 MG COMPRIMIDOS RECUBIERTOS CON PELICULA EFG\",\n  \"labtitular\": \"Reddy Pharma Iberia S.A.\",\n  \"cpresc\": \"Uso Hospitalario\",\n  \"estado\": {\n    \"aut\": 1466978400000\n  },\n  \"comerc\": true,\n  \"receta\": true,\n  \"generico\": true,\n  \"conduc\": false,\n  \"triangulo\": false,\n  \"huerfano\": false,\n  \"biosimilar\": false,\n  \"nosustituible\": {\n    \"id\": 0,\n    \"nombre\": \"N/A\"\n  },\n  \"psum\": false,\n  \"notas\": false,\n  \"materialesInf\": true,\n  \"ema\": false,\n  \"docs\": [\n    {\n      \"tipo\": 1,\n      \"url\": \"https://cima.aemps.es/cima/pdfs/ft/81012/FT_81012.pdf\",\n      \"urlHtml\": \"https://cima.aemps.es/cima/dochtml/ft/81012/FT_81012.html\",\n      \"secc\": true,\n      \"fecha\": 1552696434000\n    },\n    {\n      \"tipo\": 2,\n      \"url\": \"https://cima.aemps.es/cima/pdfs/p/81012/P_81012.pdf\",\n      \"urlHtml\": \"https://cima.aemps.es/cima/dochtml/p/81012/P_81012.html\",\n      \"secc\": true,\n      \"fecha\": 1540245746000\n    }\n  ],\n  \"fotos\": [\n    {\n      \"tipo\": \"materialas\",\n      \"url\": \"https://cima.aemps.es/cima/fotos/thumbnails/materialas/81012/81012_materialas.jpg\",\n      \"fecha\": 1570105172000\n    },\n    {\n      \"tipo\": \"formafarmac\",\n      \"url\": \"https://cima.aemps.es/cima/fotos/thumbnails/formafarmac/81012/81012_formafarmac.jpg\",\n      \"fecha\": 1570105174000\n    }\n  ],\n  \"viasAdministracion\": [\n    {\n      \"id\": 48,\n      \"nombre\": \"VÍA ORAL\"\n    }\n  ],\n  \"formaFarmaceutica\": {\n    \"id\": 42,\n    \"nombre\": \"COMPRIMIDO RECUBIERTO CON PELÍCULA\"\n  },\n  \"formaFarmaceuticaSimplificada\": {\n    \"id\": 10,\n    \"nombre\": \"COMPRIMIDO\"\n  },\n  \"vtm\": {\n    \"id\": 413381000,\n    \"nombre\": \"abacavir + lamivudina\"\n  },\n  \"dosis\": \"600 mg/300 mg\"\n}\n */\nexport default function MedicineCarousel({medicines}){\n    const docTypes = ['Ficha Técnica','Prospecto', 'Informe Público Evaluación','Plan de gestión de riesgos']\n    const imgTypes = {'formafarmac':'Forma farmacéutica', 'materialas':'Material de acondicionamiento secundario'}\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        s = s.toLocaleLowerCase()\n        return s.charAt(0).toUpperCase() + s.slice(1)\n      }    \n    return(\n        <div style={{background:'#fbfbfb', padding:16}}>\n            <Title level={3}>You can find it as:</Title>\n        <Tabs size=\"small\">\n            {\n                medicines.map((medicine) => {\n                    let aut = Object.keys(medicine.estado).includes('aut')? Date(medicine.estado.aut):0\n                    let susp = Object.keys(medicine.estado).includes('susp')? Date(medicine.estado.susp):0\n                    let rev = Object.keys(medicine.estado).includes('rev')? Date(medicine.estado.rev):0\n                    let estado = aut !== 0 && (susp === 0 || aut > susp) && (rev === 0 || aut > rev )\n                    let viasAdministracion = ''\n                    let ppa = medicine.vtm.nombre.split(\" + \")\n                    let medicineDosis = medicine.dosis.split(\"/\").length >= ppa.length ? medicine.dosis.split(\"/\"):medicine.dosis.split(\"-\")\n                    let tabName = medicine.nombre.substring(0,25)\n                    tabName = medicine.nombre.length > 25 ? tabName + '...':tabName\n                    medicine.viasAdministracion.map((via) => viasAdministracion += via.nombre + ', ')\n                    return(\n                        <TabPane tab={tabName} key={medicine.nregistro}>\n                            <Title level={4}>{medicine.nombre}</Title>\n                            <Row gutter={[8,8]}>\n                                {medicine.psum? (\n                                    <Col>\n                                    <Tag color=\"error\">Problemas De Suministro</Tag>\n                                    </Col>\n                                ):''}\n                                <Col>\n                                    <Tag color=\"blue\">{medicine.cpresc}</Tag>                                \n                                </Col>\n                                <Col>\n                                    <Tag color=\"warning\">{medicine.receta ? 'Con Receta':'Sin Receta'}</Tag>                                \n                                </Col>\n                                {medicine.triangulo ? (<Col>\n                                    <Tag color=\"warning\">Triángulo Negro <CaretDownOutlined style={{color:'#000'}} /></Tag>\n                                </Col>):''}\n                                <Col>\n                                {estado ?(\n                                    <Tag color=\"success\">Autorizado</Tag>\n                                ):(\n                                    <Tag color=\"error\">Suspendido</Tag>\n                                )}\n                                </Col>\n                                { medicine.comerc?(\n                                    <Col>\n                                        <Tag color=\"success\">Comercial</Tag>\n                                    </Col>):''\n                                }\n                            </Row>\n                            <div>\n                            <List header={<Title level={3}>Información General</Title>}>\n                                <List.Item><Text strong>Forma Farmacéutica: </Text> {capitalize(medicine.formaFarmaceutica.nombre)}</List.Item>\n                                <List.Item ><Text strong>Via de Administración: </Text>{capitalize(viasAdministracion)}</List.Item>\n                                <List.Item><Text strong>Principio Activo: </Text> {medicine.vtm.nombre}</List.Item>\n                                <List.Item><Text strong>Dosis:</Text></List.Item>\n                                {medicineDosis.map((dosis, idx) =>(\n                                    <>\n                                {ppa.length > idx ? (<List.Item><Text strong>{capitalize(ppa[idx]) + ': '}</Text>{ dosis}</List.Item>):''}\n                                </>\n                                ))\n                                }\n                            </List>\n                            </div>\n                            {medicine.materialesInf === true ?(\n                                <>\n                                {medicine.docs.length !== 0 ? (\n                                <>\n                                    <Title level={4}>Documentos Asociados</Title>\n                                    <Space size=\"small\" direction=\"vertical\">\n                                        {medicine.docs.map((doc) => (\n                                            <a href={doc.url}>{docTypes[doc.tipo]}</a>\n                                        ))}\n                                    </Space>\n                                </>\n                                ):''}\n                                {medicine.fotos.length !== 0 ? (\n                                    <>\n                                    <Title level={4}>Imagenes Asociadas</Title>\n                                    <Row align=\"bottom\" gutter={[16,16]}>\n                                    {medicine.fotos.map((img) => (\n                                        <Col xs={24} md={8} justify=\"center\">\n                                            <Row justify=\"center\">\n                                            <img src={img.url} alt=\"\" className=\" medicineImg responsiveImg\"/>\n                                            </Row>\n                                            <Row justify=\"center\">\n                                                <Text type=\"secondary\">{imgTypes[img.tipo]}</Text>\n                                            </Row>\n                                        </Col>\n                                    ))}\n                                    </Row>\n                                    </>\n                                ):''}\n\n                                </>\n                            ):''}\n                        </TabPane>\n                    )\n                })\n            }\n        </Tabs>    \n        </div>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {Tabs,Typography, Tag, Row, Col, Space, Divider} from 'antd'\nimport MedicineCarousel from './MedicineCarousel'\nconst { TabPane } = Tabs;\nconst {Title} = Typography\nconst {Paragraph} = Typography\nconst { Text } = Typography;\n/*\n\natc_code: \"N02BE01\"\n​​\natc_parent: \"N02BE\"\n​​\ncui: \"C0000970\"\n​​\nlevel: 5\n​​\nname: \"paracetamol\"\n*/\nexport default function DrugTabs({drugs}){\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        s = s.toLocaleLowerCase()\n        return s.charAt(0).toUpperCase() + s.slice(1)\n      }\n    console.log(drugs)    \n    return(\n        <>\n        {drugs.length !== 0 ?(\n        <Tabs>\n            {drugs.map((drug) => {\n                return(\n                    <TabPane tab={capitalize(drug.name)} key={drug.atc_code}>\n                        <Row gutter={[16,16]}>\n                            <Col>\n                            <Tag color=\"blue\">ATC: {drug.atc_code}</Tag>\n                            </Col>\n                            <Col>\n                                <Tag color=\"geekblue\">Parent ATC: {drug.atc_parent}</Tag>\n                            </Col>\n                            <Col>\n                                 <Tag color=\"green\">CUI: {drug.cui}</Tag>\n                            </Col>\n                            <Col>\n                                 <Tag color=\"volcano\">LEVEL: {drug.level}</Tag>                        \n                            </Col>\n                        </Row>                        \n                        <Title level={2}>\n                            {capitalize(drug.name)}\n                        </Title>\n                        <Divider></Divider>\n                        { drug.medicinesInfo.length !== 0 ?(\n                        <div>\n                            <MedicineCarousel medicines={drug.medicinesInfo}></MedicineCarousel>\n                            <Divider></Divider>\n                        </div>\n                        ):''\n                        }\n                        <div style={{  overflow:'auto'}}>\n                        {Object.keys(drug.relatedDrugs).length !== 0 ? (\n                            <>\n                            <Title level={3}>Related Drugs:</Title>\n                            <Space direction=\"vertical\" size=\"small\">\n                            { Object.keys(drug.relatedDrugs).map((key) =>{\n                                return(\n                                <Row gutter={[16,16]}>\n                                    <Col>\n                                    <Text strong>\n                                        {capitalize(drug.relatedDrugs[key])}\n                                    </Text>\n                                    </Col>\n                                    <Col>\n                                        <Tag color=\"blue\">\n                                            ATC: {key}\n                                        </Tag>\n                                    </Col>\n                                </Row>\n                                \n                                )\n                            })}\n                            </Space>\n                            </>\n                        ):''}                           \n                        </div>\n                        <Divider></Divider>\n                        <div style={{  overflow:'auto'}}>\n                            <Title level={3}>This drug appear in:</Title>\n                            <Space direction=\"vertical\">\n                                {drug.relatedArticles.map((article) => (\n                                    <a target=\"_blank\"href={article.url}>{article.name}</a>\n                                ))}\n                            </Space>\n                        </div>\n                        <Divider></Divider>\n                        <div style={{  overflow:'auto'}}>\n                            <Title level={3}>Related Diseases:</Title>\n                            <Space direction=\"vertical\" size=\"small\">\n                                <Row gutter={[8,8]} justify=\"left\" align=\"middle\">\n                                { Object.keys(drug.relatedDiseases).map((disease) => {\n                                    return(\n                                    <Col>\n                                        <Tag color=\"red\">{disease}</Tag>\n                                    </Col>\n                                    )\n                                })}\n                                </Row>\n                            </Space>\n                        </div>\n                        <Divider></Divider>\n                    </TabPane>\n                )\n            })}\n        </Tabs>\n        ):''}\n        </>\n    )\n}","import React from 'react'\nimport Layout from '../components/Layout'\nimport SearchBar from '../components/Searchbar'\nimport DrugTabs from '../components/DrugTabs'\nimport { Row, Col, Typography} from 'antd';\nimport MedicalResearch from '../assets/medical_research.svg'\n\nconst {Title} = Typography\nconst {Paragraph} = Typography\nexport default class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            drugs:[]\n        }\n    }\n    setDrugs(drugs){\n        this.setState({drugs:drugs})\n    }\n    render(){\n        return(\n            <Layout>\n                <SearchBar parentCallback={(drugs) => this.setDrugs(drugs)}></SearchBar>\n                {this.state.drugs.length !== 0 ? (<DrugTabs drugs={this.state.drugs}></DrugTabs>):(\n                    <div>\n                    <Row align=\"top\">\n                        <Col xs={24} md={12}>\n                            <Title level={2}>\n                            BIO-NLP\n                            </Title>\n                            <Paragraph>\n                            An open web service to identify drugs mentioned in a text and classify them according to the Anatomical Therapeutic Chemical (ATC) classification system and the Concept Unique Identifiers (CUI) described in the Unified Medical Language System (UMLS)\n                            </Paragraph>\n                        </Col>\n                        <Col xs={24} md={12}>\n                            <img className=\"responsiveImg\" src={MedicalResearch}/>\n                        </Col>                         \n                    </Row>\n                    <Row>\n                       \n                    </Row>\n                    </div>\n                )}\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from './pages/Home'\nimport './App.css';\nimport 'antd/dist/antd.css';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}