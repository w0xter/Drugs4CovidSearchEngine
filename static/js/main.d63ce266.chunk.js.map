{"version":3,"sources":["components/Header.js","components/Layout.js","components/Searchbar.js","api/requests.js","components/DrugTabs.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","style","paddingTop","paddingBottom","Item","float","to","Layout","justify","xs","span","md","lg","xl","children","Search","Input","SearchBar","searh","data","Promise","resolve","reject","axios","post","header","then","response","catch","err","findDrugs","text","result","promiseChainRelatedDrugs","promiseChainRelatedDiseases","promiseChainRelatedArticles","map","drug","idx","relatedDrugs","relatedDiseases","relatedArticles","push","get","getRelatedArticles","atc_code","getRelatedDrugs","getRelatedDiseases","all","drugs","console","log","Object","keys","includes","articles","diseases","placeholder","enterButton","size","onSearch","value","parentCallback","message","error","sendData","TabPane","Tabs","Title","Typography","Text","Paragraph","DrugTabs","capitalize","s","charAt","toUpperCase","slice","length","tab","name","key","gutter","color","atc_parent","cui","level","direction","strong","article","target","href","link","disease","Home","state","this","setState","setDrugs","React","Component","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d63ce266.chunk.js","sourcesContent":["import React from 'react'\nimport {Menu} from 'antd'\nimport {Link} from 'react-router-dom'\nexport default function Header(props){\n    return(\n        <Menu style={{paddingTop: 16, paddingBottom:16}}>\n            <Menu.Item style={{float:'left'}}>\n                <Link to=\"/\">BIO NLP</Link>\n            </Menu.Item>\n        </Menu>\n    )\n}","import React from 'react'\nimport Header from './Header'\nimport {Row, Col} from 'antd'\nexport default function Layout(props){\n    return(\n        <Row justify=\"center\">\n            <Col\n            xs={{ span: 22 }}\n            md={{ span: 18}}\n            lg={{ span: 16}}\n            xl={{ span: 12}}            \n            >\n                <Header></Header>\n                {props.children}\n            </Col>\n        </Row>\n    )\n}","import React from 'react'\nimport {Input, message} from 'antd'\nimport {findDrugs, getRelatedDrugs, getRelatedDiseases, getRelatedArticles} from '../api/requests'\nconst { Search } = Input;\nexport default function SearchBar(props){\n    const sendData = (value) => {\n        searh(value).then((data) => {\n            props.parentCallback(data)\n        }).catch(err => message.error(\"Oops, somenthing goes wrong please try it again...\"));\n    }\n    const searh = (data) => {\n        return new Promise((resolve, reject) => {\n            findDrugs({text:data}).then((response) => {\n                let result= response\n                let promiseChainRelatedDrugs = []\n                let promiseChainRelatedDiseases = []\n                let promiseChainRelatedArticles = []\n                response.map((drug, idx) => {\n                    result[idx].relatedDrugs = []\n                    result[idx].relatedDiseases = []\n                    result[idx].relatedArticles = []\n                    promiseChainRelatedArticles.push(getRelatedArticles(drug.atc_code))\n                    promiseChainRelatedDrugs.push(getRelatedDrugs(drug.atc_code))\n                    promiseChainRelatedDiseases.push(getRelatedDiseases(drug.atc_code))\n                })\n                Promise.all(promiseChainRelatedDrugs).then((data) =>{\n                    data.map((drugs, idx) => {\n                        console.log(\"Llego 1\")\n                    if (Object.keys(drugs).includes(result[idx].atc_code)) \n                        delete drugs[result[idx].atc_code]\n                    result[idx].relatedDrugs=drugs\n                    })\n                    return Promise.all(promiseChainRelatedArticles)\n                }).then((data) => {\n                    console.log(\"Llego 2\")\n                    data.map((articles, idx) => {\n                        result[idx].relatedArticles=articles\n                    })\n                    return Promise.all(promiseChainRelatedDiseases)\n                })\n                .then((data) => {\n                    console.log(\"Llego 3\")\n                    Promise.resolve(data.map((diseases, idx) => {\n                        result[idx].relatedDiseases=diseases\n                    })).then(() => resolve(result))                    \n                })\n                .catch((err) => reject(err))\n    \n            }).catch((err) => reject(err))\n        })\n    }\n    return(    \n        <Search\n            placeholder=\"input search text\"\n            enterButton=\"Search\"\n            size=\"large\"\n            onSearch={value => sendData(value)}\n        />\n      )\n}","import axios from 'axios'\nconst API = 'https://librairy.linkeddata.es/bio-nlp'\nexport function findDrugs(data){\n    return new Promise((resolve, reject) => {\n        const options = {\n            header:{\n                'Content-Type': 'application/json'\n            }\n        }\n        axios.post(`${API}/drugs`, data, options).then((response) => {\n            resolve(response.data)\n        }).catch(err => reject(err));\n    });\n}\nexport function getRelatedDrugs(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/drugs?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n\n    })\n} \nexport function getRelatedDiseases(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/diseases?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    })\n}\nexport function getRelatedArticles(data){\n    return new Promise((resolve, reject) => {\n        axios.get(`https://librairy.linkeddata.es/bio-nlp/articles?atc=${data}`).then((response) => {\n            resolve(response.data)\n        }).catch((err) => reject(err))\n    })\n}","import React, {useEffect, useState} from 'react'\nimport {Tabs,Typography, Tag, Row, Col, Space, Divider} from 'antd'\n\nconst { TabPane } = Tabs;\nconst {Title} = Typography\nconst {Paragraph} = Typography\nconst { Text } = Typography;\n/*\n\natc_code: \"N02BE01\"\n​​\natc_parent: \"N02BE\"\n​​\ncui: \"C0000970\"\n​​\nlevel: 5\n​​\nname: \"paracetamol\"\n*/\nexport default function DrugTabs({drugs}){\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n      }    \n    return(\n        <>\n        {drugs.length !== 0 ?(\n        <Tabs>\n            {drugs.map((drug) => {\n                return(\n                    <TabPane tab={capitalize(drug.name)} key={drug.name}>\n                        <Row gutter={[16,16]}>\n                            <Col>\n                            <Tag color=\"blue\">ATC: {drug.atc_code}</Tag>\n                            </Col>\n                            <Col>\n                                <Tag color=\"purple\">Parent ATC: {drug.atc_parent}</Tag>\n                            </Col>\n                            <Col>\n                                 <Tag color=\"green\">CUI: {drug.cui}</Tag>\n                            </Col>\n                            <Col>\n                                 <Tag color=\"volcano\">LEVEL: {drug.level}</Tag>                        \n                            </Col>\n                        </Row>                        \n                        <Title level={2}>\n                            {capitalize(drug.name)}\n                        </Title>\n                        <Divider></Divider>\n                        <div>\n                        {Object.keys(drug.relatedDrugs).length !== 0 ? (\n                            <>\n                            <Title level={3}>Related Drugs:</Title>\n                            <Space direction=\"vertical\" size=\"small\">\n                            { Object.keys(drug.relatedDrugs).map((key) =>{\n                                console.log(Object.keys(drug.relatedDrugs))\n                                return(\n                                <Row gutter={[16,16]}>\n                                    <Col>\n                                    <Text strong>\n                                        {capitalize(drug.relatedDrugs[key])}\n                                    </Text>\n                                    </Col>\n                                    <Col>\n                                        <Tag color=\"blue\">\n                                            ATC: {key}\n                                        </Tag>\n                                    </Col>\n                                </Row>\n                                \n                                )\n                            })}\n                            </Space>\n                            </>\n                        ):''}                           \n                        </div>\n                        <Divider></Divider>\n                        <div>\n                            <Title level={3}>This drug appear in:</Title>\n                            <Space direction=\"vertical\">\n                                {drug.relatedArticles.map((article) => (\n                                    <a target=\"_blank\"href={article.link}>{article.name}</a>\n                                ))}\n                            </Space>\n                        </div>\n                        <Divider></Divider>\n                        <div>\n                            <Title level={3}>Related Diseases:</Title>\n                            <Space direction=\"vertical\" size=\"small\">\n                                <Row gutter={[16,16]}>\n                                { Object.keys(drug.relatedDiseases).map((disease) => {\n                                    return(\n                                    <Col>\n                                        <Tag color=\"red\">{disease}</Tag>\n                                    </Col>\n                                    )\n                                })}\n                                </Row>\n                            </Space>\n                        </div>\n                        <Divider></Divider>\n                    </TabPane>\n                )\n            })}\n        </Tabs>\n        ):''}\n        </>\n    )\n}","import React from 'react'\nimport Layout from '../components/Layout'\nimport SearchBar from '../components/Searchbar'\nimport DrugTabs from '../components/DrugTabs'\nexport default class Home extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            drugs:[]\n        }\n    }\n    setDrugs(drugs){\n        this.setState({drugs:drugs})\n    }\n    render(){\n        return(\n            <Layout>\n                <SearchBar parentCallback={(drugs) => this.setDrugs(drugs)}></SearchBar>\n                <DrugTabs drugs={this.state.drugs}></DrugTabs>\n            </Layout>\n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from './pages/Home'\nimport './App.css';\nimport 'antd/dist/antd.css';\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}